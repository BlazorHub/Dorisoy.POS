<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="Amount" xml:space="preserve">
    <value>Amount</value>
  </data>
  <data name="Back To List" xml:space="preserve">
    <value>Back To List</value>
  </data>
  <data name="Balance" xml:space="preserve">
    <value>Balance</value>
  </data>
  <data name="BalanceDue" xml:space="preserve">
    <value>BalanceDue</value>
  </data>
  <data name="Brand" xml:space="preserve">
    <value>Brand</value>
  </data>
  <data name="Category" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="Category Name" xml:space="preserve">
    <value>Category Name</value>
  </data>
  <data name="City" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="Code" xml:space="preserve">
    <value>Code</value>
  </data>
  <data name="Company" xml:space="preserve">
    <value>Company</value>
  </data>
  <data name="Company Setting" xml:space="preserve">
    <value>Company Setting</value>
  </data>
  <data name="Confirm Password" xml:space="preserve">
    <value>Confirm Password</value>
  </data>
  <data name="Country" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="Cr.Amount / Sales" xml:space="preserve">
    <value>Cr.Amount / Sales</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="Currency Name" xml:space="preserve">
    <value>Currency Name</value>
  </data>
  <data name="Cusomer Name" xml:space="preserve">
    <value>Cusomer Name</value>
  </data>
  <data name="Customer" xml:space="preserve">
    <value>Customer</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="Default Currency" xml:space="preserve">
    <value>Default Currency</value>
  </data>
  <data name="Default Customer" xml:space="preserve">
    <value>Default Customer</value>
  </data>
  <data name="Default Warehouse" xml:space="preserve">
    <value>Default Warehouse</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="Discount" xml:space="preserve">
    <value>Discount</value>
  </data>
  <data name="Discount Amount" xml:space="preserve">
    <value>Discount Amount</value>
  </data>
  <data name="Dr.Amount / Receive" xml:space="preserve">
    <value>Dr.Amount / Receive</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="Expenses Category" xml:space="preserve">
    <value>Expenses Category</value>
  </data>
  <data name="Expenses List" xml:space="preserve">
    <value>Expenses List</value>
  </data>
  <data name="Filter" xml:space="preserve">
    <value>Filter</value>
  </data>
  <data name="First Name" xml:space="preserve">
    <value>First Name</value>
  </data>
  <data name="From Date" xml:space="preserve">
    <value>From Date</value>
  </data>
  <data name="Grand Total" xml:space="preserve">
    <value>Grand Total</value>
  </data>
  <data name="Group" xml:space="preserve">
    <value>Group</value>
  </data>
  <data name="Image" xml:space="preserve">
    <value>Image</value>
  </data>
  <data name="Is Active" xml:space="preserve">
    <value>Is Active</value>
  </data>
  <data name="Last Name" xml:space="preserve">
    <value>Last Name</value>
  </data>
  <data name="Menu Name" xml:space="preserve">
    <value>Menu Name</value>
  </data>
  <data name="Mobile" xml:space="preserve">
    <value>Mobile</value>
  </data>
  <data name="Net Unit Cost" xml:space="preserve">
    <value>Net Unit Cost</value>
  </data>
  <data name="No of Decimal" xml:space="preserve">
    <value>No of Decimal</value>
  </data>
  <data name="Note" xml:space="preserve">
    <value>Note</value>
  </data>
  <data name="Order items" xml:space="preserve">
    <value>Order items</value>
  </data>
  <data name="Order Tax" xml:space="preserve">
    <value>Order Tax</value>
  </data>
  <data name="Paid" xml:space="preserve">
    <value>Paid</value>
  </data>
  <data name="Paid By" xml:space="preserve">
    <value>Paid By</value>
  </data>
  <data name="Particular" xml:space="preserve">
    <value>Particular</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="Per (%)" xml:space="preserve">
    <value>Per (%)</value>
  </data>
  <data name="Permission" xml:space="preserve">
    <value>Permission</value>
  </data>
  <data name="Phone" xml:space="preserve">
    <value>Phone</value>
  </data>
  <data name="Phone No" xml:space="preserve">
    <value>Phone No</value>
  </data>
  <data name="Prefix" xml:space="preserve">
    <value>Prefix</value>
  </data>
  <data name="Product" xml:space="preserve">
    <value>Product</value>
  </data>
  <data name="Pur.Qty" xml:space="preserve">
    <value>Pur.Qty</value>
  </data>
  <data name="Pur.Rate" xml:space="preserve">
    <value>Pur.Rate</value>
  </data>
  <data name="Purchase" xml:space="preserve">
    <value>Purchase</value>
  </data>
  <data name="Purchase Invoice" xml:space="preserve">
    <value>Purchase Invoice</value>
  </data>
  <data name="Qty" xml:space="preserve">
    <value>Qty</value>
  </data>
  <data name="Rate" xml:space="preserve">
    <value>Rate</value>
  </data>
  <data name="Reference" xml:space="preserve">
    <value>Reference</value>
  </data>
  <data name="Role Name" xml:space="preserve">
    <value>Role Name</value>
  </data>
  <data name="Sales" xml:space="preserve">
    <value>Sales</value>
  </data>
  <data name="SalesQty" xml:space="preserve">
    <value>SalesQty</value>
  </data>
  <data name="SalesRate" xml:space="preserve">
    <value>SalesRate</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Shipping" xml:space="preserve">
    <value>Shipping</value>
  </data>
  <data name="Show" xml:space="preserve">
    <value>Show</value>
  </data>
  <data name="Show Address" xml:space="preserve">
    <value>Show Address</value>
  </data>
  <data name="Show Barcode" xml:space="preserve">
    <value>Show Barcode</value>
  </data>
  <data name="Show Discount" xml:space="preserve">
    <value>Show Discount</value>
  </data>
  <data name="Show Email" xml:space="preserve">
    <value>Show Email</value>
  </data>
  <data name="Show Note" xml:space="preserve">
    <value>Show Note</value>
  </data>
  <data name="Show Phone" xml:space="preserve">
    <value>Show Phone</value>
  </data>
  <data name="Show Tax" xml:space="preserve">
    <value>Show Tax</value>
  </data>
  <data name="Start Index" xml:space="preserve">
    <value>Start Index</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="Stock" xml:space="preserve">
    <value>Stock</value>
  </data>
  <data name="StockQty" xml:space="preserve">
    <value>StockQty</value>
  </data>
  <data name="Submit" xml:space="preserve">
    <value>Submit</value>
  </data>
  <data name="Subtotal" xml:space="preserve">
    <value>Subtotal</value>
  </data>
  <data name="Suffix" xml:space="preserve">
    <value>Suffix</value>
  </data>
  <data name="Supplier" xml:space="preserve">
    <value>Supplier</value>
  </data>
  <data name="Supplier Name" xml:space="preserve">
    <value>Supplier Name</value>
  </data>
  <data name="Symbol" xml:space="preserve">
    <value>Symbol</value>
  </data>
  <data name="System Setting" xml:space="preserve">
    <value>System Setting</value>
  </data>
  <data name="Tax" xml:space="preserve">
    <value>Tax</value>
  </data>
  <data name="Tax Name" xml:space="preserve">
    <value>Tax Name</value>
  </data>
  <data name="To Date" xml:space="preserve">
    <value>To Date</value>
  </data>
  <data name="Total" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="Unit" xml:space="preserve">
    <value>Unit</value>
  </data>
  <data name="Unit Name" xml:space="preserve">
    <value>Unit Name</value>
  </data>
  <data name="User" xml:space="preserve">
    <value>User</value>
  </data>
  <data name="Voucher No" xml:space="preserve">
    <value>Voucher No</value>
  </data>
  <data name="VoucherType Name" xml:space="preserve">
    <value>VoucherType Name</value>
  </data>
  <data name="Warehouse Name" xml:space="preserve">
    <value>Warehouse Name</value>
  </data>
  <data name="Website" xml:space="preserve">
    <value>PanNo</value>
  </data>
</root>