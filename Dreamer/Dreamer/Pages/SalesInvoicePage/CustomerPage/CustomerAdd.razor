@page "/sales/customeradd"
@inject IStringLocalizer<App> localizer
@inject ILocalStorageService sessionStorage
@inject IRole _role
@inject IAccountLedger accountLedger
@inject IJSRuntime JsRuntime
@inject NavigationManager navManager
@inject ISnackbar Snackbar
<div class="main-content pt-4">
    <div>
        <div class="breadcrumb"><h1> @localizer["Customer"]</h1>
            <ul>
                <li><a href=""> @localizer["Sales"] </a></li> 
                <li> @localizer["Customer"] / @localizer["Add"] </li>
            </ul>
            </div>
            <div class="separator-breadcrumb border-top">

            </div>
            </div>
            <div class="card wrapper">
                <EditForm Model="@master" OnValidSubmit="@HandleValidSubmit">
                    <DataAnnotationsValidator />
            <div class="row">
                <div class="col-md-12">
                    <div class="card">
<div class="card-body">
                                <div class="card-title mb-3">@localizer["Customer"]</div>
                                    <div class="row">
                                        <div class="col-md-6 form-group mb-3">
                                            <label for="firstName1">@localizer["Customer Name"]</label>
                                            <input class="form-control" @bind="master.LedgerName" type="text">
                                        <ValidationMessage For="@(() => master.LedgerName)" />
                                        </div>
                                        <div class="col-md-6 form-group mb-3">
                                            <label for="lastName1">@localizer["Code"]</label>
                                            <input class="form-control" @bind="master.LedgerCode" readonly type="text">
                                        <ValidationMessage For="@(() => master.LedgerCode)" />
                                        </div>
                                        <div class="col-md-6 form-group mb-3">
                                            <label for="lastName1">@localizer["Phone"]</label>
                                            <input class="form-control" @bind="master.Phone" type="text">
                                        <ValidationMessage For="@(() => master.Phone)" />
                                        </div>
                                        <div class="col-md-6 form-group mb-3">
                                            <label for="lastName1">@localizer["Mobile"]</label>
                                            <input class="form-control" @bind="master.Mobile" type="text">
                                        <ValidationMessage For="@(() => master.Mobile)" />
                                        </div>
                                        <div class="col-md-6 form-group mb-3">
                                            <label for="lastName1">@localizer["Email"]</label>
                                            <input class="form-control" @bind="master.Email" type="text">
                                        <ValidationMessage For="@(() => master.Email)" />
                                        </div>
                                        <div class="col-md-6 form-group mb-3">
                                            <label for="website">@localizer["Country"]</label>
                                            <input class="form-control" @bind="master.Country" type="text">
                                        </div>
                                        <div class="col-md-6 form-group mb-3">
                                            <label for="picker2">@localizer["City"]</label>
                                            <input class="form-control" @bind="master.City" type="text">
                                        </div>
                                        <div class="col-md-6 form-group mb-3">
                                            <label for="picker2">@localizer["Address"]</label>
                                            <input class="form-control" @bind="master.Address" type="text">
                                        </div>
                                        <div class="col-md-12">
                                            <button class="btn btn-primary">@localizer["Submit"]</button>
                                            <button type="button" class="btn btn-danger" @onclick="@Cancel">@localizer["Back to List"]</button>
                                        </div>
                                    </div>
                            </div>
            </div> 
            </div>
            </div>
            </EditForm>
            </div>
            </div>
@code {
    AccountLedger master = new AccountLedger();
    string strMenu = "Customer";
    bool strAdd = true;
    bool strEdit = true;
    bool strDelete = true;
    bool strShow = true;
    int RoleId = 1;
    Privilege privi = new Privilege();
    protected async override void OnInitialized()
    {
        //RoleId = await sessionStorage.GetItemAsync<int>("RoleId");
        //CheckPriviliage
        privi = _role.PriviliageCheck(strMenu, RoleId, 1);
        if (privi != null)
        {
            strAdd = privi.AddAction;
            strEdit = privi.EditAction;
            strDelete = privi.DeleteAction;
            strShow = privi.ShowAction;
            if (strAdd == false)
            {
                Snackbar.Add("You dont have to privilege.", Severity.Success);
                navManager.NavigateTo("dashboard");
            }
        }
        else
        {
            strAdd = true;
            strEdit = true;
            strDelete = true;
            strShow = true;
        }
        var strSerialNo = accountLedger.SerialNoCode(1);
        master.LedgerCode = strSerialNo;
        StateHasChanged();
    }
    public async Task HandleValidSubmit()
    {
        master.AccountGroupId = 26;
            master.OpeningBalance = 0;
            master.Narration = string.Empty;
            master.IsDefault = false;
            master.CrOrDr = "Dr";
            master.AddedDate = DateTime.UtcNow;
            master.CompanyId = 1;
            var isCheck = accountLedger.CheckName(master.LedgerCode);
            if (isCheck == true)
            {
                Snackbar.Add("Code Already Exists.", Severity.Info);
            }
            else
            {
                int intProductId = accountLedger.Save(master);
                Snackbar.Add("Saved Successfully.", Severity.Success);
                navManager.NavigateTo("/sales/customerlist");
            }
    }
    void Cancel()
    {
        navManager.NavigateTo("/sales/customerlist");
    }
    }
