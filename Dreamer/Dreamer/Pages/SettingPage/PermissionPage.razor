@page "/setting/permissionedit/{id}"
@inject IStringLocalizer<App> localizer
@inject ILocalStorageService sessionStorage
@inject IRole _role
@inject IRole _role
@inject IJSRuntime JsRuntime
@inject NavigationManager navManager
@inject ISnackbar Snackbar
<div class="main-content pt-4">
    <div>
        <div class="breadcrumb"><h1> @localizer["Permission"]</h1>
            <ul>
                <li><a href=""> @localizer["Setting"] </a></li> 
                <li> @localizer["Permission"] </li>
            </ul>
            </div>
            <div class="separator-breadcrumb border-top">

            </div>
            </div>
            <div class="card wrapper">
            <div class="row">
                <div class="col-md-12">
                    <div class="card">
<div class="card-body">
                                <div class="card-title mb-3">@master.RoleDesc</div>
                                    <div class="row">

                                        <table class="table">
                                            <thead>
                                                <tr>
                                                    <td>@localizer["Menu Name"]</td>
                                                    <td>@localizer["Add"]</td>
                                                    <td>@localizer["Edit"]</td>
                                                    <td>@localizer["Delete"]</td>
                                                    <td>@localizer["Show"]</td>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach(var item in listPrivilege)
                                                {
                                                    <tr>
                                        <td class=" align-middle">@item.FormName</td>
                                        <td class=" align-middle"><input type="checkbox" @bind="item.AddAction" /></td>
                                        <td class=" align-middle"><input type="checkbox" @bind="item.EditAction" /></td>
                                        <td class=" align-middle"><input type="checkbox" @bind="item.DeleteAction" />  </td>
                                        <td class=" align-middle"><input type="checkbox" @bind="item.ShowAction" /></td>

                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                        <div class="col-md-12">
                                            <button class="btn btn-primary" @onclick="HandleValidSubmit">@localizer["Submit"]</button>
                                            <button type="button" class="btn btn-danger" @onclick="@Cancel">@localizer["Back to List"]</button>
                                        </div>
                                    </div>
                            </div>
            </div> 
            </div>
            </div>
            </div>
            </div>
@code {
    [Parameter]
    public string id { get; set; }
    Role master = new Role();
    List<Privilege> listPrivilege = new List<Privilege>();
    Privilege priviliage = new Privilege();
    string strMenu = "Permission";
    bool strAdd = true;
    bool strEdit = true;
    bool strDelete = true;
    bool strShow = true;
    int RoleId = 1;
    Privilege privi = new Privilege();
    protected async override void OnInitialized()
    {
        //RoleId = await sessionStorage.GetItemAsync<int>("RoleId");
        //CheckPriviliage
        privi = _role.PriviliageCheck(strMenu, RoleId, 1);
        if (privi != null)
        {
            strAdd = privi.AddAction;
            strEdit = privi.EditAction;
            strDelete = privi.DeleteAction;
            strShow = privi.ShowAction;
            if (strShow == false)
            {
                Snackbar.Add("You dont have to privilege.", Severity.Success);
                navManager.NavigateTo("dashboard");
            }
        }
        else
        {
            strAdd = true;
            strEdit = true;
            strDelete = true;
            strShow = true;
        }
        master = _role.Edit(Convert.ToInt32(id));
        var isCheck = _role.CheckRoleName(Convert.ToInt32(id));
        if (isCheck == true)
        {
            listPrivilege = _role.GetAllPrivilege(Convert.ToInt32(id));
        }
        else
        {
            listPrivilege = _role.GetAllPrivilege();
        }
        StateHasChanged();
    }
    public async Task HandleValidSubmit()
    {
            if (master.RoleId == 0)
            {
                Snackbar.Add("Invalid.", Severity.Info);
            }
            else
            {
                if (master.RoleId == 1)
                {
                    Snackbar.Add("Invalid.", Severity.Info);
                }
                else
                {
                    bool isSave = false;
                    isSave = _role.DeleteRolePriviliage(1, master.RoleId);
                    if (master.RoleId == 1)
                    {
                        Snackbar.Add("Invalid.", Severity.Info);
                    }
                    else
                    {
                        foreach (var item in listPrivilege)
                        {
                            priviliage.RoleId = master.RoleId;
                            priviliage.FormName = item.FormName;
                            priviliage.FormNameNepali = string.Empty;
                            priviliage.AddAction = item.AddAction;
                            priviliage.EditAction = item.EditAction;
                            priviliage.DeleteAction = item.DeleteAction;
                            priviliage.ShowAction = item.ShowAction;
                            priviliage.CompanyId = 1;
                            priviliage.SettingType = "Inventory";
                            priviliage.IsActive = true;
                            priviliage.AddedDate = DateTime.Now;
                            _role.SavePrivilige(priviliage);
                        }
                        Snackbar.Add("Saved Successfully.", Severity.Success);
                        StateHasChanged();
                        navManager.NavigateTo("/setting/rolelist");
                    }

                }
            }
    }
    void Cancel()
    {
        navManager.NavigateTo("/setting/warehouselist");
    }
    }
