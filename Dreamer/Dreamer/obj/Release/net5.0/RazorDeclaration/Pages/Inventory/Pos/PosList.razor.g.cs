// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace Dreamer.Pages.Inventory.Pos
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "D:\dotnet5Blazor\BusinessAccount\BusinessAccount\Dreamer\Dreamer\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\dotnet5Blazor\BusinessAccount\BusinessAccount\Dreamer\Dreamer\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\dotnet5Blazor\BusinessAccount\BusinessAccount\Dreamer\Dreamer\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\dotnet5Blazor\BusinessAccount\BusinessAccount\Dreamer\Dreamer\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\dotnet5Blazor\BusinessAccount\BusinessAccount\Dreamer\Dreamer\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\dotnet5Blazor\BusinessAccount\BusinessAccount\Dreamer\Dreamer\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "D:\dotnet5Blazor\BusinessAccount\BusinessAccount\Dreamer\Dreamer\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "D:\dotnet5Blazor\BusinessAccount\BusinessAccount\Dreamer\Dreamer\_Imports.razor"
using Microsoft.AspNetCore.SignalR.Client;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "D:\dotnet5Blazor\BusinessAccount\BusinessAccount\Dreamer\Dreamer\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "D:\dotnet5Blazor\BusinessAccount\BusinessAccount\Dreamer\Dreamer\_Imports.razor"
using System.IO;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "D:\dotnet5Blazor\BusinessAccount\BusinessAccount\Dreamer\Dreamer\_Imports.razor"
using Dreamer;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "D:\dotnet5Blazor\BusinessAccount\BusinessAccount\Dreamer\Dreamer\_Imports.razor"
using Dreamer.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "D:\dotnet5Blazor\BusinessAccount\BusinessAccount\Dreamer\Dreamer\_Imports.razor"
using Dreamer.Service;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "D:\dotnet5Blazor\BusinessAccount\BusinessAccount\Dreamer\Dreamer\_Imports.razor"
using Dreamer.Service.IService;

#line default
#line hidden
#nullable disable
#nullable restore
#line 15 "D:\dotnet5Blazor\BusinessAccount\BusinessAccount\Dreamer\Dreamer\_Imports.razor"
using Dreamer.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 16 "D:\dotnet5Blazor\BusinessAccount\BusinessAccount\Dreamer\Dreamer\_Imports.razor"
using Dreamer.Data.Connection;

#line default
#line hidden
#nullable disable
#nullable restore
#line 17 "D:\dotnet5Blazor\BusinessAccount\BusinessAccount\Dreamer\Dreamer\_Imports.razor"
using Dreamer.Data.Apimodel;

#line default
#line hidden
#nullable disable
#nullable restore
#line 18 "D:\dotnet5Blazor\BusinessAccount\BusinessAccount\Dreamer\Dreamer\_Imports.razor"
using Dreamer.Data.Chart;

#line default
#line hidden
#nullable disable
#nullable restore
#line 19 "D:\dotnet5Blazor\BusinessAccount\BusinessAccount\Dreamer\Dreamer\_Imports.razor"
using Dreamer.Data.Inventory;

#line default
#line hidden
#nullable disable
#nullable restore
#line 20 "D:\dotnet5Blazor\BusinessAccount\BusinessAccount\Dreamer\Dreamer\_Imports.razor"
using Dreamer.Data.ViewModel;

#line default
#line hidden
#nullable disable
#nullable restore
#line 21 "D:\dotnet5Blazor\BusinessAccount\BusinessAccount\Dreamer\Dreamer\_Imports.razor"
using Dreamer.Nepdreamer.Interface;

#line default
#line hidden
#nullable disable
#nullable restore
#line 22 "D:\dotnet5Blazor\BusinessAccount\BusinessAccount\Dreamer\Dreamer\_Imports.razor"
using Dreamer.Nepdreamer.Repository;

#line default
#line hidden
#nullable disable
#nullable restore
#line 23 "D:\dotnet5Blazor\BusinessAccount\BusinessAccount\Dreamer\Dreamer\_Imports.razor"
using Dreamer.Nepdreamer.Repository.Inventory;

#line default
#line hidden
#nullable disable
#nullable restore
#line 24 "D:\dotnet5Blazor\BusinessAccount\BusinessAccount\Dreamer\Dreamer\_Imports.razor"
using MudBlazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 25 "D:\dotnet5Blazor\BusinessAccount\BusinessAccount\Dreamer\Dreamer\_Imports.razor"
using MudBlazor.Dialog;

#line default
#line hidden
#nullable disable
#nullable restore
#line 26 "D:\dotnet5Blazor\BusinessAccount\BusinessAccount\Dreamer\Dreamer\_Imports.razor"
using Blazored.LocalStorage;

#line default
#line hidden
#nullable disable
#nullable restore
#line 27 "D:\dotnet5Blazor\BusinessAccount\BusinessAccount\Dreamer\Dreamer\_Imports.razor"
using NumericWordsConversion;

#line default
#line hidden
#nullable disable
#nullable restore
#line 28 "D:\dotnet5Blazor\BusinessAccount\BusinessAccount\Dreamer\Dreamer\_Imports.razor"
using MatBlazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 29 "D:\dotnet5Blazor\BusinessAccount\BusinessAccount\Dreamer\Dreamer\_Imports.razor"
using BlazorContextMenu;

#line default
#line hidden
#nullable disable
#nullable restore
#line 30 "D:\dotnet5Blazor\BusinessAccount\BusinessAccount\Dreamer\Dreamer\_Imports.razor"
using Microsoft.Extensions.Configuration;

#line default
#line hidden
#nullable disable
#nullable restore
#line 31 "D:\dotnet5Blazor\BusinessAccount\BusinessAccount\Dreamer\Dreamer\_Imports.razor"
using Microsoft.Extensions.Localization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\dotnet5Blazor\BusinessAccount\BusinessAccount\Dreamer\Dreamer\Pages\Inventory\Pos\PosList.razor"
using Radzen;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\dotnet5Blazor\BusinessAccount\BusinessAccount\Dreamer\Dreamer\Pages\Inventory\Pos\PosList.razor"
using Microsoft.Data.SqlClient;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\dotnet5Blazor\BusinessAccount\BusinessAccount\Dreamer\Dreamer\Pages\Inventory\Pos\PosList.razor"
using Dapper;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\dotnet5Blazor\BusinessAccount\BusinessAccount\Dreamer\Dreamer\Pages\Inventory\Pos\PosList.razor"
using System.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 22 "D:\dotnet5Blazor\BusinessAccount\BusinessAccount\Dreamer\Dreamer\Pages\Inventory\Pos\PosList.razor"
using BlazorInputFile;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/inventory/pos")]
    public partial class PosList : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 770 "D:\dotnet5Blazor\BusinessAccount\BusinessAccount\Dreamer\Dreamer\Pages\Inventory\Pos\PosList.razor"
       
    InventorySetting settingItem = new InventorySetting();
    InventorySetting setting = new InventorySetting();
    SalesMaster mster = new SalesMaster();
    ProductView product = new ProductView();
    AccountLedger customerType = new AccountLedger();
    List<Area> listArea;
    List<ProductView> listProduct;
    List<ProductView> listUnit;
    List<SalesMan> listSalesMan;
    List<Batch> listBatch;
    List<Tax> listTax;
    List<AccountLedger> subledger = new List<AccountLedger>();
    //TodoTask
    List<ProductView> TodoList = new List<ProductView>();
    List<DeleteItem> deleteNo = new List<DeleteItem>();

    //Item
    Product productItem = new Product();
    ProductView productOpening = new ProductView();
    long decSettingVoucherId = 30;
    string strSerialNoItem = string.Empty;
    UnitConvertion convertion = new UnitConvertion();
    List<ProductGroupView> listgroupItem;
    List<ProductView> listUnitItem;
    List<ProductCategory> listCategoryItem;
    List<Tax> listTaxItem;

    //CreateBatch
    Batch batchviewdata = new Batch();
    string strSerialNo;
    string strPrefix;
    string strSuffix;
    long decVouchertypeIdSalesInvoice = 19;
    long decVoucherReceiveId = 5;
    long editedID = 0;
    string strNepaliDate;
    string strDate;
    string strDueDateNepali;
    string strDueDateEng;
    public byte[] ImageUploaded { get; set; }
    public byte[] DocImageUploaded { get; set; }
    public byte[] ImageUploadedItem { get; set; }
    string UnitId { get; set; }
    string BatchId { get; set; }
    string TaxId { get; set; }
    string strProductName = "";
    string strProductCode = "";
    string strUnitName = "";
    string strBatch = "";
    string strTaxName = "";
    bool showModal = false;
    bool showItem = false;
    bool showBatch = false;
    Privilege privi = new Privilege();
    string strMenu = "SalesInvoice";
    bool strAdd = true;
    bool strEdit = true;
    bool strDelete = true;
    bool strShow = true;
    private HubConnection hubConnection;
    protected override void OnInitialized()
    {
        PublicVariables._drawerOpen = false;
        //CheckPriviliage
        privi = priviliageRepository.PriviliageCheck(strMenu, 1, 1);
        if (privi != null)
        {
            strAdd = privi.AddAction;
            strEdit = privi.EditAction;
            strDelete = privi.DeleteAction;
            strShow = privi.ShowAction;
            if (strShow == false)
            {
                Toaster.Add("You dont have to privilege.", MatToastType.Success, "dashboard", null);
                navManager.NavigateTo("dashboard");
            }
        }
        else
        {
            strAdd = true;
            strEdit = true;
            strDelete = true;
            strShow = true;
        }
        hubConnection = new HubConnectionBuilder()
    .WithUrl(navManager.ToAbsoluteUri("/AreaHub"))
    .Build();
        hubConnection.StartAsync();
        setting = settingRepository.EditInventorySetting(decVouchertypeIdSalesInvoice);
        mster.CheckDis = "p";
        strPrefix = setting.Prefix;
        strSuffix = setting.Suffix;
        LoadData();
    }
    public bool IsConnected =>
        hubConnection.State == HubConnectionState.Connected;
    protected void LoadData()
    {
        if (setting.VoucherNoAutomatic == true)
        {
            strSerialNo = salesRepository.GetSalesvoucherNo(1, 1, decVouchertypeIdSalesInvoice);
            mster.VoucherNo = strPrefix + strSerialNo + strSuffix;
        }
        else
        {
            mster.VoucherNo = string.Empty;
            strSerialNo = "0";
        }
        strNepaliDate = DreamerDateConveter.convertToBS(DateTime.Now);
        mster.NepaliDate = strNepaliDate;
        strDate = DreamerDateConveter.convertToAD(strNepaliDate).ToShortDateString();
        mster.Date = Convert.ToDateTime(strDate);
        strDueDateNepali = DreamerDateConveter.convertToBS(DateTime.Now);
        mster.DueDateNep = strDueDateNepali;
        strDueDateEng = DreamerDateConveter.convertToAD(strDueDateNepali).ToShortDateString();
        mster.DueDate = Convert.ToDateTime(strDueDateEng);
        mster.NetAmounts = 0;
        mster.TotalAmount = 0;
        mster.DisPer = 0;
        mster.TaxRate = 0;
        mster.TotalTax = 0;
        mster.BillDiscount = 0;
        mster.CashAmount = 0;
        mster.BankAmount = 0;
        mster.CreditAmount = 0;
        mster.GrandTotal = 0;
        mster.PreviousDue = 0;
        mster.Narration = string.Empty;
        TodoList.Clear();
        subledger = salesRepository.GetAccountLedger(1);
        listSalesMan = salesRepository.GetSalesMan();
        listProduct = productrepository.ViewAllProduct(1);
        product.TaxId = 1;
        mster.TaxId = 1;
        mster.CashId = 1;
        mster.BankId = 13;
        mster.SalesManId = 1;
        GetDefaultImage();
    }
    public void GetDefaultImage() //This function is used to pass the default image when there is no image for saving.
    {
        // To get deafult image this function is used
        // As we store default image in start up path,  we assign the file path as its path
        string strImagePath = Path.Combine(Environment.CurrentDirectory, @"logo\\logo.png");
        ImageUploaded = readfile(strImagePath);
        MemoryStream ms = new MemoryStream(ImageUploaded);
        //Image newImage = Image.FromStream(ms);
        //pbxCompnayLogo.Image = newImage;
        //pbxCompnayLogo.SizeMode = PictureBoxSizeMode.StretchImage;

    }
    byte[] readfile(string strimagepath)
    {
        System.IO.FileInfo flinfo = new System.IO.FileInfo(strimagepath);
        long numbytes = flinfo.Length;
        FileStream fstream = new FileStream(strimagepath, FileMode.Open, FileAccess.Read);
        BinaryReader br = new BinaryReader(fstream);
        ImageUploaded = br.ReadBytes((int)numbytes);
        return ImageUploaded;
    }
    protected void LedgerClicked()
    {
        if (mster.LedgerId > 0)
        {
            var view = purchaseRepository.GetPreviousDuesBalanceSales(mster.LedgerId);
            mster.PreviousDue = view.DueBalance;
        }
        else
        {
            mster.PreviousDue = 0;
        }
    }
    void ModalOk()
    {
        if (customerType.LedgerName == string.Empty)
        {
            Toaster.Add("Please Type LedgerName", MatToastType.Warning, "Supplier", null);
            return;
        }
        else if (customerType.LedgerCode == string.Empty)
        {
            Toaster.Add("Please Type LedgerCode", MatToastType.Warning, "Supplier", null);
            return;
        }
        else
        {
            if (ImageUploaded != null)
            {
                customerType.LogoC = ImageUploaded;
                ImageUploaded = null;
            }
            customerType.AccountGroupId = 26;
            customerType.LogoPathC = string.Empty;
            customerType.OpeningBalance = 0;
            customerType.CreditPeriod = 0;
            customerType.CreditLimit = 0;
            customerType.PricinglevelId = 1;
            customerType.RouteId = 1;
            customerType.BankAccountNumber = string.Empty;
            customerType.BranchCode = string.Empty;
            customerType.BranchName = string.Empty;
            customerType.Country = string.Empty;
            customerType.State = string.Empty;
            customerType.Mnucapality = string.Empty;
            customerType.Street = string.Empty;
            customerType.ZipCode = string.Empty;
            customerType.Website = string.Empty;
            customerType.Map = string.Empty;
            customerType.CrOrDr = "Dr";
            customerType.AddedDate = DateTime.Now;
            customerType.CompanyId = 1;
            customerType.CreatedBy = 1;
            bool isSave = false;
            isSave = ledgerRepository.InsertAccountLedger(customerType);
            if (isSave == true)
            {
                subledger = salesRepository.GetAccountLedger(1);
                Toaster.Add("Saved Successfully.", MatToastType.Success, "AccountLedger", null);
                GetDefaultImage();
            }
            else
            {
                Toaster.Add("Already Exists.", MatToastType.Info, "AccountLedger", null);
                GetDefaultImage();
            }
        }
        showModal = false;
    }
    void ModalShow()
    {
        var strSerialNo = purchaseRepository.SerialNoCode(1);
        customerType.LedgerCode = strSerialNo;
        listArea = areaRepository.ViewAllArea(1);
        customerType.AreaId = 1;
        customerType.LedgerName = string.Empty;
        customerType.LogoPathC = string.Empty;
        customerType.OpeningBalance = 0;
        customerType.SkypeID = string.Empty;
        customerType.Twitter = string.Empty;
        customerType.Facebook = string.Empty;
        customerType.instagram = string.Empty;
        customerType.Country = string.Empty;
        customerType.State = string.Empty;
        customerType.Mnucapality = string.Empty;
        customerType.Street = string.Empty;
        customerType.ZipCode = string.Empty;
        customerType.Website = string.Empty;
        customerType.Map = string.Empty;
        showModal = true;
    }
    void ModalCancel()
    {
        customerType.LedgerCode = string.Empty;
        customerType.LedgerName = string.Empty;
        customerType.LogoPathC = string.Empty;
        customerType.OpeningBalance = 0;
        customerType.SkypeID = string.Empty;
        customerType.Twitter = string.Empty;
        customerType.Facebook = string.Empty;
        customerType.instagram = string.Empty;
        customerType.Country = string.Empty;
        customerType.State = string.Empty;
        customerType.Mnucapality = string.Empty;
        customerType.Street = string.Empty;
        customerType.ZipCode = string.Empty;
        customerType.Website = string.Empty;
        customerType.Map = string.Empty;
        showModal = false;
    }
    async Task HandleSelection(IFileListEntry[] files)
    {
        var file = files.FirstOrDefault();
        if (file != null)
        {
            var ms = new MemoryStream();
            await file.Data.CopyToAsync(ms);
            ImageUploaded = ms.ToArray();
        }
    }
    string convertImageToDisplay(byte[] image)
    {
        if (image != null)
        {
            var base64 = Convert.ToBase64String(image);
            var finalStr = string.Format("data:image/jpg;base64,{0}", base64);
            return finalStr;
        }
        return "";
    }
    private async Task ChangeFrom()
    {
        try
        {
            strNepaliDate = mster.NepaliDate;
            if (strNepaliDate == string.Empty)
            {
                strNepaliDate = DreamerDateConveter.convertToBS(DateTime.Now);
                mster.NepaliDate = strNepaliDate;
                strDate = DreamerDateConveter.convertToAD(strNepaliDate).ToShortDateString();
                mster.Date = Convert.ToDateTime(strDate);
            }
            else
            {
                strDate = DreamerDateConveter.convertToAD(strNepaliDate).ToShortDateString();
                mster.Date = Convert.ToDateTime(strDate);
            }
        }
        catch (Exception ex)
        {
            if (strDate == string.Empty)
            {
                Toaster.Add("Invalid From Date", MatToastType.Info, "Invalid", null);
            }
        }
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ISnackbar Snackbar { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IMatToaster Toaster { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager navManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime JsRuntime { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private PriviliageRepository priviliageRepository { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private BatchRepository batchRepository { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private AreaRepository areaRepository { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private SalesInvoiceRepository salesRepository { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private PurchaseInvoiceRepository purchaseRepository { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private TapSizeRepository settingRepository { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private StockPostingRepository stockPosting { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ProductRepository productrepository { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ProductGroupRepository productgroupRepository { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private AccountLedgerRepository ledgerRepository { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private AccountgroupRepository groupRepository { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private DatabaseConnection _conn { get; set; }
    }
}
#pragma warning restore 1591
