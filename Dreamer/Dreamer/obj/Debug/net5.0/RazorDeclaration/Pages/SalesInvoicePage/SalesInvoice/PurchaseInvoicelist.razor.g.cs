// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace Dreamer.Pages.SalesInvoicePage.SalesInvoice
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "D:\CodecanonProject\Dotnet5\InventoryPos\Dreamer\Dreamer\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\CodecanonProject\Dotnet5\InventoryPos\Dreamer\Dreamer\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\CodecanonProject\Dotnet5\InventoryPos\Dreamer\Dreamer\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\CodecanonProject\Dotnet5\InventoryPos\Dreamer\Dreamer\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\CodecanonProject\Dotnet5\InventoryPos\Dreamer\Dreamer\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\CodecanonProject\Dotnet5\InventoryPos\Dreamer\Dreamer\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "D:\CodecanonProject\Dotnet5\InventoryPos\Dreamer\Dreamer\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "D:\CodecanonProject\Dotnet5\InventoryPos\Dreamer\Dreamer\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "D:\CodecanonProject\Dotnet5\InventoryPos\Dreamer\Dreamer\_Imports.razor"
using System.IO;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "D:\CodecanonProject\Dotnet5\InventoryPos\Dreamer\Dreamer\_Imports.razor"
using Dreamer;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "D:\CodecanonProject\Dotnet5\InventoryPos\Dreamer\Dreamer\_Imports.razor"
using Dreamer.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "D:\CodecanonProject\Dotnet5\InventoryPos\Dreamer\Dreamer\_Imports.razor"
using Dreamer.Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "D:\CodecanonProject\Dotnet5\InventoryPos\Dreamer\Dreamer\_Imports.razor"
using Dreamer.Services.Interface;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "D:\CodecanonProject\Dotnet5\InventoryPos\Dreamer\Dreamer\_Imports.razor"
using Dreamer.Services.CartService;

#line default
#line hidden
#nullable disable
#nullable restore
#line 15 "D:\CodecanonProject\Dotnet5\InventoryPos\Dreamer\Dreamer\_Imports.razor"
using Dreamer.Services.Repository;

#line default
#line hidden
#nullable disable
#nullable restore
#line 16 "D:\CodecanonProject\Dotnet5\InventoryPos\Dreamer\Dreamer\_Imports.razor"
using Dreamer.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 17 "D:\CodecanonProject\Dotnet5\InventoryPos\Dreamer\Dreamer\_Imports.razor"
using Dreamer.Data.Connection;

#line default
#line hidden
#nullable disable
#nullable restore
#line 18 "D:\CodecanonProject\Dotnet5\InventoryPos\Dreamer\Dreamer\_Imports.razor"
using Dreamer.Data.Apimodel;

#line default
#line hidden
#nullable disable
#nullable restore
#line 19 "D:\CodecanonProject\Dotnet5\InventoryPos\Dreamer\Dreamer\_Imports.razor"
using Dreamer.Data.Inventory;

#line default
#line hidden
#nullable disable
#nullable restore
#line 20 "D:\CodecanonProject\Dotnet5\InventoryPos\Dreamer\Dreamer\_Imports.razor"
using Dreamer.Data.Setting;

#line default
#line hidden
#nullable disable
#nullable restore
#line 21 "D:\CodecanonProject\Dotnet5\InventoryPos\Dreamer\Dreamer\_Imports.razor"
using Dreamer.Data.ViewModel;

#line default
#line hidden
#nullable disable
#nullable restore
#line 22 "D:\CodecanonProject\Dotnet5\InventoryPos\Dreamer\Dreamer\_Imports.razor"
using Blazored.LocalStorage;

#line default
#line hidden
#nullable disable
#nullable restore
#line 23 "D:\CodecanonProject\Dotnet5\InventoryPos\Dreamer\Dreamer\_Imports.razor"
using Microsoft.Extensions.Configuration;

#line default
#line hidden
#nullable disable
#nullable restore
#line 24 "D:\CodecanonProject\Dotnet5\InventoryPos\Dreamer\Dreamer\_Imports.razor"
using Microsoft.Extensions.Localization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 25 "D:\CodecanonProject\Dotnet5\InventoryPos\Dreamer\Dreamer\_Imports.razor"
using MudBlazor;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/purchase/purchaseinvoicelist")]
    public partial class PurchaseInvoicelist : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 285 "D:\CodecanonProject\Dotnet5\InventoryPos\Dreamer\Dreamer\Pages\SalesInvoicePage\SalesInvoice\PurchaseInvoicelist.razor"
       
    [CascadingParameter]
    public Task<AuthenticationState> authenticationState { get; set; }
    private bool dense = true;
    private bool hover = true;
    private bool striped = true;
    private bool bordered = true;
    private string searchString1 = "";
    private string searchString2 = "";
    List<PurchaseMasterView> listModel = new List<PurchaseMasterView>();
    DateTime fromDate = DateTime.UtcNow;
    DateTime toDate = DateTime.UtcNow;
    PaymentMaster master = new PaymentMaster();
    int decPaymentSupplierVoucherType = 3;
    string strSerialNo;
    decimal PreviousDue;
    decimal decChangeAmount = 0;
    //Payment
    bool isPayment = false;
    bool isShowPayment = false;
    List<PaymentMaster> listPayment = new List<PaymentMaster>();
    protected override void OnInitialized()
    {
        LoadData();
    }
    private async void LoadData()
    {
        listModel = _purchaseInvoice.PurchaseInvoiceView(1);
    }
    async Task Delete(int id)
    {
        bool confirmed = await JsRuntime.InvokeAsync<bool>("confirm", "Are you sure?");
        if (confirmed)
        {
            PurchaseMaster view = new PurchaseMaster();
            view = _purchaseInvoice.EditPurchaseMaster(id);
            bool isSave = false;
            isSave = _purchaseInvoice.DeletePurchseInvoice(id , view.VoucherNo, 1 , 1);
            if (isSave == true)
            {
                Snackbar.Add("Delete Successfully.", Severity.Success);
                LoadData();
            }
            else
            {
                Snackbar.Add("Cannot be delete. already in used.", Severity.Info);
            }
        }
    }
    private bool Search(PurchaseMasterView element)
    {
        if (string.IsNullOrWhiteSpace(searchString1))
            return true;
        if (element.LedgerName.Contains(searchString1, StringComparison.OrdinalIgnoreCase))
            return true;
        if (element.VoucherNo.Contains(searchString1, StringComparison.OrdinalIgnoreCase))
            return true;
        return false;
    }
    private async void Search()
    {
        listModel = _purchaseInvoice.PurchaseInvoiceDetails(1, fromDate , toDate);
    }
    private async void CreatePayment()
    {
        if (master.LedgerId == 0)
        {
            Snackbar.Add("Choose Supplier.", Severity.Warning);
        }
        else if (master.VoucherNo == string.Empty)
        {
            Snackbar.Add("Type Voucherno.", Severity.Warning);
        }
        else if (master.Amount == 0)
        {
            Snackbar.Add("Type payment amount.", Severity.Warning);
        }
        else
        {

            var authState = await authenticationState;
            var user = authState.User;
            string Id = user.Identity.Name.ToString();
            var strVoucherNo = false;
            if(master.PaymentMasterId == 0)
            {
                strVoucherNo = _paymentSupplier.PaymentVoucherNoCheckExistence(1, 1, master.VoucherNo);
                if (strVoucherNo == false)
                {
                    master.SerialNo = strSerialNo;
                    master.UserId = Id;
                    master.CompanyId = 1;
                    master.FinancialYearId = 1;
                    master.VoucherTypeId = decPaymentSupplierVoucherType;
                    master.PreviousDue = PreviousDue;
                    master.AddedDate = DateTime.UtcNow;
                    bool isSave = _paymentSupplier.Save(master);
                    if(isSave == true)
                    {
                        Snackbar.Add("Successfully Saved.", Severity.Success);
                        isPayment = false;
                        LoadData();
                    }
                    else
                    {
                        Snackbar.Add("Invalid Payment.", Severity.Warning);
                    }
                }
                else
                {
                    Snackbar.Add("Voucher no already exists.", Severity.Info);
                }
            }
            else
            {
                master.CompanyId = 1;
                master.FinancialYearId = 1;
                master.VoucherTypeId = decPaymentSupplierVoucherType;
                master.PreviousDue = PreviousDue;
                master.AddedDate = DateTime.UtcNow;
                bool isSave = _paymentSupplier.Save(master);
                if(isSave == true)
                {
                    Snackbar.Add("Successfully Update.", Severity.Success);
                    isPayment = false;
                    LoadData();
                }
                else
                {
                    Snackbar.Add("Invalid Payment.", Severity.Warning);
                }
            }

        }
    }
    async Task EditPayment(PurchaseMasterView purchaseMaster)
    {
        isPayment = true;
        master.LedgerId = purchaseMaster.LedgerId;
        master.Date = DateTime.UtcNow;
        master.Amount = 0;
        master.PurchaseMasterId = purchaseMaster.PurchaseMasterId;
        master.PaymentMasterId = 0;
        master.PaymentType = "Cash";
        master.Narration = string.Empty;
        PreviousDue = 0;
        var voucherType = _voucherType.Edit(decPaymentSupplierVoucherType);
        strSerialNo = _paymentSupplier.GetVoucherNo(1, 1, decPaymentSupplierVoucherType);
        master.VoucherNo = voucherType.Prefix + strSerialNo + voucherType.Suffix;
        var view = _paymentSupplier.GetTotalReceiableAmount(purchaseMaster.PurchaseMasterId);
        if (view.Amount > 0)
        {
            PreviousDue = purchaseMaster.BalanceDue;
        }
        else
        {
            PreviousDue = purchaseMaster.GrandTotal;
        }
        StateHasChanged();
    }
    private void CalculateChange()
    {
        decChangeAmount = Math.Round(PreviousDue - master.Amount , 2);
        StateHasChanged();
    }
    async Task EditPaymentSupplier(int PaymentMasterId)
    {
        isPayment = true;
        isShowPayment = false;
        master.PaymentMasterId = PaymentMasterId;
        master = _paymentSupplier.EdiById(PaymentMasterId);
        var view = _paymentSupplier.GetTotalReceiableAmount(master.PurchaseMasterId);
        if (view.Amount > 0)
        {
            PreviousDue = view.Amount;
        }
        else
        {
            
        }
        StateHasChanged();
    }
    async Task DeletePayment(int id)
    {
            bool confirmed = await JsRuntime.InvokeAsync<bool>("confirm", "Are you sure?");
            if (confirmed)
            {
               var view = _paymentSupplier.EditPaymentMaster(id);
                bool isSave = false;
                isSave = _paymentSupplier.DeletePaymentSupplier(view.VoucherNo, view.VoucherTypeId, view.FinancialYearId, view.CompanyId);
                if (isSave == true)
                {
                    Snackbar.Add("Deleted Successfully.", Severity.Success);
                    LoadData();
                }
                else
                {
                    Snackbar.Add("Cannot be delete. already in used.", Severity.Success);
                    navManager.NavigateTo("/purchase/supplierpayslist");
                }
            }
    }
    async Task ShowPaymentList(int purchaseMasterId)
    {
        isShowPayment = true;
        listPayment = _paymentSupplier.GetAllById(purchaseMasterId);
        StateHasChanged();
    }
    private void ClosePayment()
    {
        isPayment = false;
        master.LedgerId = 0;
        master.Date = DateTime.UtcNow;
        master.Amount = 0;
        master.Narration = string.Empty;
        PreviousDue = 0;
        StateHasChanged();
    }
        private void ClosePaymentList()
    {
        isShowPayment = false;
        StateHasChanged();
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IDialogService DialogService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ISnackbar Snackbar { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager navManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime JsRuntime { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IVoucherType _voucherType { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IPaymentSupplier _paymentSupplier { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IPurchaseInvoice _purchaseInvoice { get; set; }
    }
}
#pragma warning restore 1591
