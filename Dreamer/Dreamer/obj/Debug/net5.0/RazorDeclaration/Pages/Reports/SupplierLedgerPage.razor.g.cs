// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace Dreamer.Pages.Reports
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "D:\商业项目\Blazor-Pos\Dreamer\Dreamer\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\商业项目\Blazor-Pos\Dreamer\Dreamer\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\商业项目\Blazor-Pos\Dreamer\Dreamer\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\商业项目\Blazor-Pos\Dreamer\Dreamer\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\商业项目\Blazor-Pos\Dreamer\Dreamer\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\商业项目\Blazor-Pos\Dreamer\Dreamer\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "D:\商业项目\Blazor-Pos\Dreamer\Dreamer\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "D:\商业项目\Blazor-Pos\Dreamer\Dreamer\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "D:\商业项目\Blazor-Pos\Dreamer\Dreamer\_Imports.razor"
using Dreamer;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "D:\商业项目\Blazor-Pos\Dreamer\Dreamer\_Imports.razor"
using Dreamer.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "D:\商业项目\Blazor-Pos\Dreamer\Dreamer\_Imports.razor"
using Dreamer.Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "D:\商业项目\Blazor-Pos\Dreamer\Dreamer\_Imports.razor"
using Dreamer.Services.Interface;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "D:\商业项目\Blazor-Pos\Dreamer\Dreamer\_Imports.razor"
using Dreamer.Services.CartService;

#line default
#line hidden
#nullable disable
#nullable restore
#line 15 "D:\商业项目\Blazor-Pos\Dreamer\Dreamer\_Imports.razor"
using Dreamer.Services.Repository;

#line default
#line hidden
#nullable disable
#nullable restore
#line 16 "D:\商业项目\Blazor-Pos\Dreamer\Dreamer\_Imports.razor"
using Dreamer.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 17 "D:\商业项目\Blazor-Pos\Dreamer\Dreamer\_Imports.razor"
using Dreamer.Data.Connection;

#line default
#line hidden
#nullable disable
#nullable restore
#line 18 "D:\商业项目\Blazor-Pos\Dreamer\Dreamer\_Imports.razor"
using Dreamer.Data.Apimodel;

#line default
#line hidden
#nullable disable
#nullable restore
#line 19 "D:\商业项目\Blazor-Pos\Dreamer\Dreamer\_Imports.razor"
using Dreamer.PdfReport;

#line default
#line hidden
#nullable disable
#nullable restore
#line 20 "D:\商业项目\Blazor-Pos\Dreamer\Dreamer\_Imports.razor"
using Dreamer.Data.Inventory;

#line default
#line hidden
#nullable disable
#nullable restore
#line 21 "D:\商业项目\Blazor-Pos\Dreamer\Dreamer\_Imports.razor"
using Dreamer.Data.Setting;

#line default
#line hidden
#nullable disable
#nullable restore
#line 22 "D:\商业项目\Blazor-Pos\Dreamer\Dreamer\_Imports.razor"
using Dreamer.Data.ViewModel;

#line default
#line hidden
#nullable disable
#nullable restore
#line 23 "D:\商业项目\Blazor-Pos\Dreamer\Dreamer\_Imports.razor"
using Blazored.LocalStorage;

#line default
#line hidden
#nullable disable
#nullable restore
#line 24 "D:\商业项目\Blazor-Pos\Dreamer\Dreamer\_Imports.razor"
using Microsoft.Extensions.Configuration;

#line default
#line hidden
#nullable disable
#nullable restore
#line 25 "D:\商业项目\Blazor-Pos\Dreamer\Dreamer\_Imports.razor"
using Microsoft.Extensions.Localization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 26 "D:\商业项目\Blazor-Pos\Dreamer\Dreamer\_Imports.razor"
using MudBlazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "D:\商业项目\Blazor-Pos\Dreamer\Dreamer\Pages\Reports\SupplierLedgerPage.razor"
using System.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "D:\商业项目\Blazor-Pos\Dreamer\Dreamer\Pages\Reports\SupplierLedgerPage.razor"
using NPOI.SS.UserModel;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "D:\商业项目\Blazor-Pos\Dreamer\Dreamer\Pages\Reports\SupplierLedgerPage.razor"
using NPOI.XSSF.UserModel;

#line default
#line hidden
#nullable disable
#nullable restore
#line 15 "D:\商业项目\Blazor-Pos\Dreamer\Dreamer\Pages\Reports\SupplierLedgerPage.razor"
using System.IO;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/report/supplierledger")]
    public partial class SupplierLedgerPage : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 127 "D:\商业项目\Blazor-Pos\Dreamer\Dreamer\Pages\Reports\SupplierLedgerPage.razor"
       
    bool open;
    Anchor anchor;
    List<SalesMasterView> listModel = new List<SalesMasterView>();
    List<AccountLedgerView> listCustomer = new List<AccountLedgerView>();
    DateTime FromDate = DateTime.UtcNow.AddDays(-1);
    DateTime ToDate = DateTime.UtcNow;
    Company company = new Company();
    int CustomerId = 0;
    string myMarkup;
    string strMenu = "Supplier Ledger";
    bool strAdd = true;
    bool strEdit = true;
    bool strDelete = true;
    bool strShow = true;
    int RoleId = 1;
    Privilege privi = new Privilege();
    protected async override void OnInitialized()
    {
        //RoleId = await sessionStorage.GetItemAsync<int>("RoleId");
        //CheckPriviliage
        privi = _role.PriviliageCheck(strMenu, RoleId, 1);
        if (privi != null)
        {
            strAdd = privi.AddAction;
            strEdit = privi.EditAction;
            strDelete = privi.DeleteAction;
            strShow = privi.ShowAction;
            if (strShow == false)
            {
                Snackbar.Add("You dont have to privilege.", Severity.Success);
                navManager.NavigateTo("dashboard");
            }
        }
        else
        {
            strAdd = true;
            strEdit = true;
            strDelete = true;
            strShow = true;
        }
        listCustomer = _customer.ViewAllSupplier(1); // 1 is companyid
        company = _company.Edit(1); // 1 is companyid
        Search();
        StateHasChanged();
    }
     protected void Search()
    {
        string values = @"<table class='table table-striped'>
                <tr>
                <th style='display:none;'>SN</th>
                <th>Date</th>
                <th>Voucher No</th>
                <th>Particular</th>
                <th> Dr.Amount / Purchase</th>
                <th> Cr.Amount / Payment</th>
                <th>Balance</th>
            </tr> ";

            //OpeningBlnce
            DataTable dtblsubOpening = new DataTable();
            DataSet dsetOpening = new DataSet();
            dsetOpening = report.CustomerLedgerOpening(Convert.ToDateTime(FromDate), CustomerId, 1);
            int counter1 = 0;
            dtblsubOpening = dsetOpening.Tables[0];
            decimal decDebit = 0;
            decimal decCredit = 0;
            decimal totlDebit = 0;
            decimal totlCredit = 0;
            if (dtblsubOpening.Rows.Count > 0)
            {
                for (int i = 0; i < dtblsubOpening.Rows.Count; i++)
                {
                    decDebit = Convert.ToDecimal(dtblsubOpening.Rows[i]["Debit"].ToString());
                    decCredit = Convert.ToDecimal(dtblsubOpening.Rows[i]["Credit"].ToString());
                    counter1++;
                    values += @"<tr>
            <td style='display:none;'>" + counter1.ToString() + @"</td>
            <td>" + @FromDate + @"</td>
            <td>" + "" + @"</td>
            <td style='font-style:bold; color:red; font-size:16px;'>" + "Opening Amount" + @"</td>
            <td>" + dtblsubOpening.Rows[i]["Debit"].ToString() + @"</td>
            <td>" + dtblsubOpening.Rows[i]["Credit"].ToString() + @"</td>
            <td>" + "" + @"</td>
        </tr>";


                }
            }

            DataTable dtblsub = new DataTable();
            DataSet dset = new DataSet();
            dset = report.CustomerLedger(Convert.ToDateTime(FromDate), Convert.ToDateTime(ToDate), CustomerId, 1);
            int counter = 0;
            dtblsub = dset.Tables[0];
            string strBalance = string.Empty;


            if (dtblsub.Rows.Count > 0)
            {
                for (int i = 0; i < dtblsub.Rows.Count; i++)
                {
                    counter++;
                    if (counter == 1)
                    {
                        strBalance = CalculateBalance(i, decDebit + decimal.Parse(dtblsub.Rows[i]["Debit"].ToString()), decimal.Parse(dtblsub.Rows[i]["Credit"].ToString()) + decCredit, strBalance);
                    }
                    else
                    {
                        strBalance = CalculateBalance(i, decimal.Parse(dtblsub.Rows[i]["Debit"].ToString()), decimal.Parse(dtblsub.Rows[i]["Credit"].ToString()), strBalance);
                    }
                    long decVoucherTypeId = Convert.ToInt64(dtblsub.Rows[i]["VoucherTypeId"].ToString());
                    totlDebit = totlDebit + decimal.Parse(dtblsub.Rows[i]["Debit"].ToString());
                    totlCredit = totlCredit + decimal.Parse(dtblsub.Rows[i]["Credit"].ToString());
                    if (decVoucherTypeId == 6) //SalesInvoice
                    {
                        values += @"<tr>
            <td style='display:none;'>" + counter.ToString() + @"</td>
            <td>" + dtblsub.Rows[i]["Date"].ToString() + @"</td>
            <td>" + dtblsub.Rows[i]["VoucherNo"].ToString() + @" </td>
            <td style='font-style:bold; color:black; font-size:16px;'>" + dtblsub.Rows[i]["Particular"].ToString() + @"</td>
            <td> " + dtblsub.Rows[i]["Debit"].ToString() + @"</td>
            <td> " + dtblsub.Rows[i]["Credit"].ToString() + @"</td>
            <td>" + strBalance.ToString() + @"</td>
        </tr>";
                    }
                    else if (decVoucherTypeId == 7) //PurchaseReturn
                    {
                        values += @"<tr>
            <td style='display:none;'>" + counter.ToString() + @"</td>
            <td>" + dtblsub.Rows[i]["Date"].ToString() + @"</td>
            <td>" + dtblsub.Rows[i]["VoucherNo"].ToString() + @" </td>
            <td style='font-style:bold; color:black; font-size:16px;'>" + dtblsub.Rows[i]["Particular"].ToString() + @"</td>
            <td> " + dtblsub.Rows[i]["Debit"].ToString() + @"</td>
            <td> " + dtblsub.Rows[i]["Credit"].ToString() + @"</td>
            <td>" + strBalance.ToString() + @"</td>
        </tr>";
                    }
                    else if (decVoucherTypeId == 3) //Payment
                    {
                        values += @"<tr>
            <td style='display:none;'>" + counter.ToString() + @"</td>
            <td>" + dtblsub.Rows[i]["Date"].ToString() + @"</td>
            <td>" + dtblsub.Rows[i]["VoucherNo"].ToString() + @" </td>
            <td style='font-style:bold; color:black; font-size:16px;'>" + dtblsub.Rows[i]["particular"].ToString() + @"</td>
            <td> " + dtblsub.Rows[i]["Debit"].ToString() + @"</td>
            <td> " + dtblsub.Rows[i]["Credit"].ToString() + @"</td>
            <td>" + strBalance.ToString() + @"</td>
        </tr>";
                    }

                }
            }
            decimal decTotlDebitss = totlDebit + decDebit;
            decimal decTotlCreditss = totlCredit + decCredit;
            decimal decBlnce = decTotlDebitss - decTotlCreditss;
            values += @"<tr>
<td style='display:none;'></td>
<td></td>
<td style='font-style:bold; color:black; font-size:16px;'>Total</td>
<td>" + "" + @"</td>
<td style='font-style:bold; color:black; font-size:16px;'>" + decTotlDebitss + @"</td>
<td style='font-style:bold; color:black; font-size:16px;'>" + decTotlCreditss + @"</td>
<td>" + decBlnce + @"</td>
</tr>";
            values += "</table>";
            myMarkup = values;
    }
    private string CalculateBalance(int index, decimal decDebit, decimal decCredit, string strPreviousBalance)
    {
        string strCurrentBalance = string.Empty;
        string strCrOrDr = string.Empty;
        decimal decRowBalance = 0;
        try
        {
            if (index > 0)
            {
                string[] strLastBalance = strPreviousBalance.Split(' ');
                if (strLastBalance.Length >= 2)
                {
                    if ((strLastBalance[1] == null ? "" : strLastBalance[1]) != string.Empty)
                    {
                        if (strLastBalance[1] == "Dr")
                        {
                            decDebit = decimal.Parse(strLastBalance[0]) + decDebit;
                        }
                        if (strLastBalance[1] == "Cr")
                        {
                            decCredit = decimal.Parse(strLastBalance[0]) + decCredit;
                        }
                    }
                }
            }
            decRowBalance = decDebit - decCredit;
            if (decRowBalance > 0)
                strCrOrDr = " Dr";
            else if (decRowBalance < 0)
            {
                decRowBalance = decRowBalance * (-1);
                strCrOrDr = " Cr";
            }
            else
                strCrOrDr = string.Empty;
        }
        catch (Exception ex)
        {
            throw ex;
        }
        return strCurrentBalance = Convert.ToString(decRowBalance) + strCrOrDr;
    }
    void OpenDrawer(Anchor anchor)
    {
        open = true;
        this.anchor = anchor;
    }
    void CloseDrawer()
    {
        open = false;
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IDialogService DialogService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ISnackbar Snackbar { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager navManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime JsRuntime { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ICompany _company { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IAccountLedger _customer { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IInventoryReport report { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IRole _role { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ILocalStorageService sessionStorage { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IStringLocalizer<App> localizer { get; set; }
    }
}
#pragma warning restore 1591
