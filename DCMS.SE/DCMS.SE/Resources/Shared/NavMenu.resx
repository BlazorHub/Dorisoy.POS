<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Brand" xml:space="preserve">
    <value>品牌</value>
  </data>
  <data name="Store" xml:space="preserve">
    <value>公司</value>
  </data>
  <data name="Create Expens" xml:space="preserve">
    <value>创建费用</value>
  </data>
  <data name="Create Product" xml:space="preserve">
    <value>创建商品</value>
  </data>
  <data name="Create Purchase" xml:space="preserve">
    <value>创建采购</value>
  </data>
  <data name="Create PurchaseReturn" xml:space="preserve">
    <value>采购退货</value>
  </data>
  <data name="Create Sales" xml:space="preserve">
    <value>创建销售</value>
  </data>
  <data name="Create SalesReturn" xml:space="preserve">
    <value>销售退货</value>
  </data>
  <data name="Currency" xml:space="preserve">
    <value>货币</value>
  </data>
  <data name="Customer" xml:space="preserve">
    <value>客户</value>
  </data>
  <data name="Customer Terminal" xml:space="preserve">
    <value>客户分类账</value>
  </data>
  <data name="Dashboard" xml:space="preserve">
    <value>控制面板</value>
  </data>
  <data name="Expenses" xml:space="preserve">
    <value>费用</value>
  </data>
  <data name="Expenses Category" xml:space="preserve">
    <value>费用类别</value>
  </data>
  <data name="Expenses List" xml:space="preserve">
    <value>费用单</value>
  </data>
  <data name="Inventory Settings" xml:space="preserve">
    <value>库存配置</value>
  </data>
  <data name="Payment Sent &amp; Received" xml:space="preserve">
    <value>收付款</value>
  </data>
  <data name="Permissions" xml:space="preserve">
    <value>权限</value>
  </data>
  <data name="Product Group" xml:space="preserve">
    <value>商品组</value>
  </data>
  <data name="Product List" xml:space="preserve">
    <value>商品列表</value>
  </data>
  <data name="Products" xml:space="preserve">
    <value>商品</value>
  </data>
  <data name="Purchase" xml:space="preserve">
    <value>采购</value>
  </data>
  <data name="Purchase List" xml:space="preserve">
    <value>采购单</value>
  </data>
  <data name="Purchase Payments" xml:space="preserve">
    <value>采购付款</value>
  </data>
  <data name="Purchase Report" xml:space="preserve">
    <value>采购报表</value>
  </data>
  <data name="Purchase Return" xml:space="preserve">
    <value>采购退货</value>
  </data>
  <data name="PurchaseReturn List" xml:space="preserve">
    <value>采购退货列表</value>
  </data>
  <data name="Reports" xml:space="preserve">
    <value>报表</value>
  </data>
  <data name="Sales" xml:space="preserve">
    <value>销售</value>
  </data>
  <data name="Sales List" xml:space="preserve">
    <value>销售列表</value>
  </data>
  <data name="Sales Receive" xml:space="preserve">
    <value>销售收款</value>
  </data>
  <data name="Sales Report" xml:space="preserve">
    <value>销售报表</value>
  </data>
  <data name="Sales Return" xml:space="preserve">
    <value>销售退货</value>
  </data>
  <data name="SalesReturn List" xml:space="preserve">
    <value>销售退货列表</value>
  </data>
  <data name="Setting" xml:space="preserve">
    <value>配置</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>配置项</value>
  </data>
  <data name="Stock Reports" xml:space="preserve">
    <value>库存报表</value>
  </data>
  <data name="Supplier" xml:space="preserve">
    <value>供应商</value>
  </data>
  <data name="Supplier Terminal" xml:space="preserve">
    <value>供应商分类账</value>
  </data>
  <data name="Tax" xml:space="preserve">
    <value>税率</value>
  </data>
  <data name="This Week Sales &amp; Purchases" xml:space="preserve">
    <value>本周销售与采购</value>
  </data>
  <data name="Top 10 Customers" xml:space="preserve">
    <value>客户排行Top10</value>
  </data>
  <data name="Top 10 Selling Products" xml:space="preserve">
    <value>销售商品排行Top10</value>
  </data>
  <data name="Unit" xml:space="preserve">
    <value>单位</value>
  </data>
  <data name="Users" xml:space="preserve">
    <value>用户</value>
  </data>
  <data name="Warehouse" xml:space="preserve">
    <value>仓库</value>
  </data>
  <data name="Warehouse Report" xml:space="preserve">
    <value>仓库报表</value>
  </data>
</root>