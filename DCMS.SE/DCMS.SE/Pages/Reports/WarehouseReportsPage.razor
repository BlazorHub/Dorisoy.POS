@page "/report/warehousereport"
@inject IStringLocalizer<App> localizer
@inject ILocalStorageService sessionStorage
@inject IRole _role
@inject IWarehouse _warehouse
@inject IInventoryReport reportRepository
@inject ISalesInvoice _salesInvoice
@inject ISalesReturnInvoice _salesReturnInvoice
@inject IPurchaseInvoice _purchaseInvoice
@inject IPurchaseReturnInvoice _purchaseReturnInvoice
@inject ITerminal _customer
@inject IWarehouse _warehouse
@inject IJSRuntime JsRuntime
@inject NavigationManager navManager
@inject ISnackbar Snackbar
@inject IDialogService DialogService
<div class="main-content pt-4">
    <div>
        <div class="breadcrumb"><h1> @localizer["Warehouse Report"]</h1>
            <ul>
                <li><a href=""> @localizer["Warehouse Report"] </a></li> 
                <li> Report </li>
            </ul>
            </div>
            <div class="separator-breadcrumb border-top">

            </div>
            </div>
            <div class="card wrapper">
            <div class="card-body">
            <div class="vgt-wrap "> 
            <div class="vgt-inner-wrap">
                <div class="vgt-global-search vgt-clearfix">
                 <div class="vgt-global-search__actions vgt-pull-right">
                     <div class="mt-2 mb-3">
                          Warehouse
                          <select class="form-control" @bind="WarehouseId" @onclick="ChangeWarehouse">
                              <option value="0">Choose Warehouse</option>
                              @foreach(var item in listWarehouse)
                              {
                                  <option value="@item.WarehouseId">@item.Name</option>
                              }
                          </select>
        </div>
        </div>
        </div>
        <div class="vgt-responsive">
            <div class="row">
                    <!-- ICON BG-->
                    <div class="col-lg-3 col-md-6 col-sm-6">
                        <div class="card card-icon-bg card-icon-bg-primary o-hidden mb-4">
                            <div class="card-body text-center"><i class="i-Full-Cart"></i>
                                <div class="content">
                                    <p class="text-muted mt-2 mb-0">@localizer["Sales"]</p>
                                    <p class="text-primary text-24 line-height-1 mb-2">@totalSales</p>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-3 col-md-6 col-sm-6">
                        <div class="card card-icon-bg card-icon-bg-primary o-hidden mb-4">
                            <div class="card-body text-center"><i class="i-Add-Cart"></i>
                                <div class="content">
                                    <p class="text-muted mt-2 mb-0">@localizer["Purchase"]</p>
                                    <p class="text-primary text-24 line-height-1 mb-2">@totalPurchase</p>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-3 col-md-6 col-sm-6">
                        <div class="card card-icon-bg card-icon-bg-primary o-hidden mb-4">
                            <div class="card-body text-center"><i class="i-Checkout-Basket"></i>
                                <div class="content">
                                    <p class="text-muted mt-2 mb-0">@localizer["Sales Return"]</p>
                                    <p class="text-primary text-24 line-height-1 mb-2">@totalSalesReturn</p>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-3 col-md-6 col-sm-6">
                        <div class="card card-icon-bg card-icon-bg-primary o-hidden mb-4">
                            <div class="card-body text-center"><i class="i-Money-2"></i>
                                <div class="content">
                                    <p class="text-muted mt-2 mb-0">@localizer["Purchase Return"]</p>
                                    <p class="text-primary text-24 line-height-1 mb-2">@totalPurchaseReturn</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            <MudTabs Elevation="2" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-6">
    <MudTabPanel Text="Sales Invoice">
        <MudTable Items="@listModel" Dense="@dense" Hover="@hover" Bordered="@bordered" Striped="@striped" Filter="new Func<SalesMasterView,bool>(Search)">
    <ToolBarContent>
        <MudTextField @bind-Value="searchString1" Placeholder="搜索" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>
    <HeaderContent>
        <MudTh>@localizer["Voucher No"]</MudTh>
        <MudTh>@localizer["Date"]</MudTh>
        <MudTh>@localizer["Cusomer Name"]</MudTh>
        <MudTh>@localizer["Amount"]</MudTh>
        <MudTh>@localizer["Paid"]</MudTh>
        <MudTh>@localizer["BalanceDue"]</MudTh>
        <MudTh>@localizer["Status"]</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="">@context.VoucherNo</MudTd>
        <MudTd DataLabel="">@context.Date</MudTd>
        <MudTd DataLabel="">@context.TerminalName</MudTd>
        <MudTd DataLabel="">@context.GrandTotal</MudTd>
        <MudTd DataLabel="">@context.PaymentAmount</MudTd>
        <MudTd DataLabel="">@context.BalanceDue</MudTd>
        <MudTd DataLabel="">
            @if(context.Status == "Paid")
            {
             <span class="badge badge-outline-success">@context.Status</span>
            }
            else if(context.Status == "部分支付")
            {
             <span class="badge badge-outline-primary">@context.Status</span>
            }
             else
            {
                 <span class="badge badge-outline-success">@context.Status</span>                       
            }
           </MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager PageSizeOptions="new int[] {10, 20, 50, 100}" RowsPerPageString="每页行数"/>
    </PagerContent>
</MudTable>
    </MudTabPanel>
    <MudTabPanel Text="Sales Return">
        <MudTable Items="@listSalesReturn" Dense="@dense" Hover="@hover" Bordered="@bordered" Striped="@striped" Filter="new Func<SalesReturnMasterView,bool>(SearchSalesReturn)">
    <ToolBarContent>
        <MudTextField @bind-Value="searchString1" Placeholder="搜索" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>
    <HeaderContent>
        <MudTh>VoucherNo</MudTh>
        <MudTh>Date</MudTh>
        <MudTh>Cusomer Name</MudTh>
        @*<MudTh>VoucherType</MudTh>*@
        <MudTh>Amount</MudTh>
        <MudTh>Paid</MudTh>
        <MudTh>BalanceDue</MudTh>
        <MudTh>Status</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="">@context.VoucherNo</MudTd>
        <MudTd DataLabel="">@context.Date</MudTd>
        <MudTd DataLabel="">@context.TerminalName</MudTd>
        @*<MudTd DataLabel="">@context.VoucherTypeName</MudTd>*@
        <MudTd DataLabel="">@context.GrandTotal</MudTd>
        <MudTd DataLabel="">@context.PaymentAmount</MudTd>
        <MudTd DataLabel="">@context.BalanceDue</MudTd>
        <MudTd DataLabel="">
            @if(context.Status == "Paid")
            {
             <span class="badge badge-outline-success">@context.Status</span>
            }
            else if(context.Status == "部分支付")
            {
             <span class="badge badge-outline-primary">@context.Status</span>
            }
             else
            {
                 <span class="badge badge-outline-success">@context.Status</span>                       
            }
           </MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager PageSizeOptions="new int[] {10, 20, 50, 100}" RowsPerPageString="每页行数"/>
    </PagerContent>
</MudTable>
    </MudTabPanel>
    <MudTabPanel Text="Purchase Invoice">
        <MudTable Items="@listPurchaseInvoice" Dense="@dense" Hover="@hover" Bordered="@bordered" Striped="@striped" Filter="new Func<PurchaseMasterView,bool>(SearchPurchaseInvoice)">
    <ToolBarContent>
        <MudTextField @bind-Value="searchString1" Placeholder="搜索" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>
    <HeaderContent>
        <MudTh>@localizer["VoucherNo"]</MudTh>
        <MudTh>@localizer["Date"]</MudTh>
        <MudTh>@localizer["Supplier Name"]</MudTh>
        <MudTh>@localizer["Voucher Type"]</MudTh>
        <MudTh>@localizer["Amount"]</MudTh>
        <MudTh>@localizer["Paid"]</MudTh>
        <MudTh>@localizer["BalanceDue"]</MudTh>
        <MudTh>@localizer["Status"]</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="">@context.VoucherNo</MudTd>
        <MudTd DataLabel="">@context.Date</MudTd>
        <MudTd DataLabel="">@context.TerminalName</MudTd>
        <MudTd DataLabel="">@context.VoucherTypeName</MudTd>
        <MudTd DataLabel="">@context.GrandTotal</MudTd>
        <MudTd DataLabel="">@context.PaymentAmount</MudTd>
        <MudTd DataLabel="">@context.BalanceDue</MudTd>
        <MudTd DataLabel="">
            @if(context.Status == "Paid")
            {
             <span class="badge badge-outline-success">@context.Status</span>
            }
            else if(context.Status == "部分支付")
            {
             <span class="badge badge-outline-primary">@context.Status</span>
            }
             else
            {
                 <span class="badge badge-outline-success">@context.Status</span>                       
            }
           </MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager PageSizeOptions="new int[] {10, 20, 50, 100}" RowsPerPageString="每页行数"/>
    </PagerContent>
</MudTable>
    </MudTabPanel>

    <MudTabPanel Text="PurchaseReturn Invoice">
        <MudTable Items="@listPurchaseReturn" Dense="@dense" Hover="@hover" Bordered="@bordered" Striped="@striped" Filter="new Func<PurchaseReturnMasterView,bool>(SearchPurchaseReturn)">
    <ToolBarContent>
        <MudTextField @bind-Value="searchString1" Placeholder="搜索" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>
    <HeaderContent>
        <MudTh>@localizer["Voucher No"]</MudTh>
        <MudTh>@localizer["Date"]</MudTh>
        <MudTh>@localizer["Supplier Name"]</MudTh>
        @*<MudTh>VoucherType</MudTh>*@
        <MudTh>@localizer["Amount"]</MudTh>
        <MudTh>@localizer["Paid"]</MudTh>
        <MudTh>@localizer["BalanceDue"]</MudTh>
        <MudTh>@localizer["Status"]</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="">@context.VoucherNo</MudTd>
        <MudTd DataLabel="">@context.Date</MudTd>
        <MudTd DataLabel="">@context.TerminalName</MudTd>
        @*<MudTd DataLabel="">@context.VoucherTypeName</MudTd>*@
        <MudTd DataLabel="">@context.GrandTotal</MudTd>
        <MudTd DataLabel="">@context.PaymentAmount</MudTd>
        <MudTd DataLabel="">@context.BalanceDue</MudTd>
        <MudTd DataLabel="">
            @if(context.Status == "Paid")
            {
             <span class="badge badge-outline-success">@context.Status</span>
            }
            else if(context.Status == "部分支付")
            {
             <span class="badge badge-outline-primary">@context.Status</span>
            }
             else
            {
                 <span class="badge badge-outline-success">@context.Status</span>                       
            }
           </MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager PageSizeOptions="new int[] {10, 20, 50, 100}" RowsPerPageString="每页行数"/>
    </PagerContent>
</MudTable>
    </MudTabPanel>
</MudTabs>
                </div>
        </div>
        </div>
        </div>
        </div>
        </div>
@code {
    decimal totalSales = 0;
    decimal totalPurchase = 0;
    decimal totalSalesReturn = 0;
    decimal totalPurchaseReturn = 0;
    private bool dense = true;
    private bool hover = true;
    private bool striped = true;
    private bool bordered = true;
    private string searchString1 = "";
    private string searchString2 = "";
    bool open;
    Anchor anchor;
    List<SalesMasterView> listModel = new List<SalesMasterView>();
    List<SalesReturnMasterView> listSalesReturn = new List<SalesReturnMasterView>();
    List<PurchaseMasterView> listPurchaseInvoice = new List<PurchaseMasterView>();
    List<PurchaseReturnMasterView> listPurchaseReturn = new List<PurchaseReturnMasterView>();
    List<Warehouse> listWarehouse = new List<Warehouse>();
    int CustomerId = 0;
    int WarehouseId = 0;
    string Status = "All";
    string strMenu = "SalesReport";
    bool strAdd = true;
    bool strEdit = true;
    bool strDelete = true;
    bool strShow = true;
    int RoleId = 1;
    Privilege privi = new Privilege();
    protected  override void OnInitialized()
    {
        //RoleId = await sessionStorage.GetItemAsync<int>("RoleId");
        //CheckPriviliage
        privi = _role.PriviliageCheck(strMenu, RoleId, 1);
        if (privi != null)
        {
            strAdd = privi.AddAction;
            strEdit = privi.EditAction;
            strDelete = privi.DeleteAction;
            strShow = privi.ShowAction;
            if (strShow == false)
            {
                Snackbar.Add("You dont have to privilege.", Severity.Success);
                navManager.NavigateTo("dashboard");
            }
        }
        else
        {
            strAdd = true;
            strEdit = true;
            strDelete = true;
            strShow = true;
        }
        listWarehouse = _warehouse.GetAll();
        StateHasChanged();
    }
    private void ChangeWarehouse()
    {
        if(WarehouseId > 0)
        {
            var resultSlesPurchse = reportRepository.SalesTotalwarehouse(WarehouseId); //TotalSales
        totalSales = resultSlesPurchse.GrandTotal;
        //TotalPurchase
        var returnTotalPurchase = reportRepository.PurchaseTotalwarehouse(WarehouseId);
        totalPurchase = returnTotalPurchase.GrandTotal;

        //TotalSalesReturn
        var returnSalesReturn = reportRepository.SalesReturnTotalwarehouse(WarehouseId);
        totalSalesReturn = returnSalesReturn.GrandTotal;

        //TotalPurchaseReturn
        var returnPurchaseReturn = reportRepository.PurchaseReturnTotalwarehouse(WarehouseId);
        totalPurchaseReturn = returnPurchaseReturn.GrandTotal;
            listModel = _salesInvoice.SalesInvoiceViewWarehouse(WarehouseId);
            listSalesReturn = _salesReturnInvoice.SalesReturnInvoiceViewwarehouse(WarehouseId); // 1 is StoreId
            listPurchaseInvoice = _purchaseInvoice.PurchaseInvoiceViewwarehouse(WarehouseId);
            listPurchaseReturn = _purchaseReturnInvoice.PurchaseReturnInvoiceViewwarehouse(WarehouseId); // 1 is StoreId
            StateHasChanged();
        }
        else
        {
            var resultSlesPurchse = reportRepository.SalesTotalwarehouse(WarehouseId); //TotalSales
        totalSales = resultSlesPurchse.GrandTotal;
        //TotalPurchase
        var returnTotalPurchase = reportRepository.PurchaseTotalwarehouse(WarehouseId);
        totalPurchase = returnTotalPurchase.GrandTotal;

        //TotalSalesReturn
        var returnSalesReturn = reportRepository.SalesReturnTotalwarehouse(WarehouseId);
        totalSalesReturn = returnSalesReturn.GrandTotal;

        //TotalPurchaseReturn
        var returnPurchaseReturn = reportRepository.PurchaseReturnTotalwarehouse(WarehouseId);
        totalPurchaseReturn = returnPurchaseReturn.GrandTotal;
            listModel = _salesInvoice.SalesInvoiceViewWarehouse(WarehouseId);
            listSalesReturn = _salesReturnInvoice.SalesReturnInvoiceViewwarehouse(WarehouseId); // 1 is StoreId
            listPurchaseInvoice = _purchaseInvoice.PurchaseInvoiceViewwarehouse(WarehouseId);
            listPurchaseReturn = _purchaseReturnInvoice.PurchaseReturnInvoiceViewwarehouse(WarehouseId); // 1 is StoreId
        }
    }
    private bool Search(SalesMasterView element)
    {
        if (string.IsNullOrWhiteSpace(searchString1))
            return true;
        if (element.TerminalName.Contains(searchString1, StringComparison.OrdinalIgnoreCase))
            return true;
        if (element.VoucherNo.Contains(searchString1, StringComparison.OrdinalIgnoreCase))
            return true;
        return false;
    }
    private bool SearchSalesReturn(SalesReturnMasterView element)
    {
        if (string.IsNullOrWhiteSpace(searchString1))
            return true;
        if (element.TerminalName.Contains(searchString1, StringComparison.OrdinalIgnoreCase))
            return true;
        if (element.VoucherNo.Contains(searchString1, StringComparison.OrdinalIgnoreCase))
            return true;
        return false;
    }
    private bool SearchPurchaseInvoice(PurchaseMasterView element)
    {
        if (string.IsNullOrWhiteSpace(searchString1))
            return true;
        if (element.TerminalName.Contains(searchString1, StringComparison.OrdinalIgnoreCase))
            return true;
        if (element.VoucherNo.Contains(searchString1, StringComparison.OrdinalIgnoreCase))
            return true;
        return false;
    }
    private bool SearchPurchaseReturn(PurchaseReturnMasterView element)
    {
        if (string.IsNullOrWhiteSpace(searchString1))
            return true;
        if (element.TerminalName.Contains(searchString1, StringComparison.OrdinalIgnoreCase))
            return true;
        if (element.VoucherNo.Contains(searchString1, StringComparison.OrdinalIgnoreCase))
            return true;
        return false;
    }
}