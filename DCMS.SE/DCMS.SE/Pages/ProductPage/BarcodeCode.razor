@page "/product/barcode/{id}"
@inject IStringLocalizer<App> localizer
@inject ILocalStorageService sessionStorage
@inject IRole _role
@inject IProduct _product
@inject IJSRuntime JsRuntime
@inject NavigationManager navManager
@inject ISnackbar Snackbar
@using Net.ConnectCode.Barcode;
<div class="main-content pt-4">
    <div>
        <div class="breadcrumb">
            <h1>@localizer["商品"]</h1>
            <ul>
                <li><a href=""> @localizer["Product"] </a></li>
                <li> @localizer["条码"] </li>
            </ul>
            </div>
            <div class="separator-breadcrumb border-top">

            </div>
            </div>
            <div class="card wrapper">
        <div class="row">
            <div class="col-sm-12">



                <MudCard Outlined="true">
                    <MudCardContent>
                        <div class="barcode-inner barcode-innerdiv">
                            <div id="barcode">@master.ProductCode</div>
                            <div id="barcode_text">@master.ProductName</div>
                        </div>
                    </MudCardContent>
                    <MudCardActions Class="gap-2">
                        <MudButton StartIcon="@Icons.Material.Filled.Print" Variant="Variant.Filled" Color="MudBlazor.Color.Primary">打印</MudButton>
                        <MudButton StartIcon="@Icons.Material.Filled.Undo" Variant="Variant.Filled" Color="MudBlazor.Color.Primary" Link="/product/productlist">取消</MudButton>
                    </MudCardActions>
                </MudCard>



            </div>



        </div>
    </div>
</div>
@code {
    [Parameter]
    public string id { get; set; }
    Product master = new Product();
    string InputText { get; set; } = "";
    string QRCodeStr { get; set; } = "";
    protected  override void OnInitialized()
    {
        master = _product.Edit(Convert.ToInt32(id));
        GenerateBarcode();
        StateHasChanged();
    }

    void GenerateBarcode()
    {
        BarcodeFonts bcf = new BarcodeFonts();
        bcf.BarcodeType = BarcodeFonts.BarcodeEnum.Code39;
        bcf.CheckDigit = BarcodeFonts.YesNoEnum.Yes;
        bcf.Data = master.Barcode;
        bcf.encode();
        master.Barcode = bcf.EncodedData;
        master.ProductName = bcf.HumanText;
    }
}
